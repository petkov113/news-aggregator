{"version":3,"sources":["redux/reducers/articlesReducer.ts","redux/reducers/profileReducer.ts","redux/reducers/rootReducer.ts","redux/constants.js","serviceWorker.ts","axios/axios.js","redux/actions/profileActions.ts","redux/actions/commonActions.ts","Components/UI/ThemeToggler/ThemeToggle.tsx","Components/Sidebar/Sidebar.tsx","utilities/js/variants.js","Components/UI/Input/Input.tsx","Components/UI/Button/Button.tsx","Components/UI/Loader/Loader.js","Components/Form/AuthForm.tsx","Components/UI/Select/Select.tsx","Components/Containers/Profile/Profile.tsx","redux/actions/articlesActions.ts","Components/SmallCard/SmallCard.tsx","Components/Comments/Comment/Comment.tsx","Components/Comments/Comments.tsx","Components/SocialButtons/SocialButtons.tsx","Components/Containers/Saved/Saved.tsx","Components/UI/PostPlaceholder/PostPlaceholder.tsx","Components/Search/Search.tsx","Components/Card/Card.tsx","Components/Grid/Grid.tsx","Components/Containers/Feed/Feed.tsx","App.tsx","index.tsx","Components/UI/Button/Button.module.scss","Components/UI/Loader/Loader.module.css"],"names":["initialState","loading","articles","saved","error","comments","isAuth","userId","name","token","region","label","value","language","rootReducer","combineReducers","profile","state","action","type","payload","store","createStore","composeWithDevTools","applyMiddleware","thunk","Boolean","window","location","hostname","match","authAxios","axios","create","baseURL","userAxios","atriclesAxios","authSuccess","logout","localStorage","removeItem","autoLogout","time","dispatch","setTimeout","setRegion","setName","setLanguage","getUserData","getState","a","id","get","response","data","console","log","ThemeToggle","isChecked","theme","onChange","className","checked","htmlFor","withRouter","isAuthenticated","children","links","to","tooltip","icon","flow","exact","push","map","link","key","data-testid","routerVariants","hidden","opacity","visible","transition","exit","savedVariants","x","staggerChildren","readerVariants","Input","onBlur","Math","random","toString","substr","Button","btnType","onClick","disabled","classes","Loader","lds_ellipsis","initialValues","email","password","onSubmit","values","actions","setSubmitting","validationSchema","Yup","shape","required","min","generall","renderError","message","renderField","placeholder","replace","l","toUpperCase","AuthForm","handleRegister","isLoading","handleLogin","props","render","isValid","dirty","setStatus","status","Select","items","defValue","defaultValue","item","regions","languages","mapDispatchToProps","auth","isLogin","authData","returnSecureToken","url","process","post","expiresIn","idToken","localId","expirationDate","Date","getTime","setItem","warning","sendRegion","patch","sendName","sendLanguage","connector","connect","isAuthentiphicated","user","useEffect","div","variants","initial","animate","find","el","e","target","toggleArticle","article","refreshFeed","feedAritcles","savedArticles","isSaved","filter","setSaved","setArticles","requestSaved","getComments","Object","entries","reduce","acc","comment","date","author","setComments","setError","validateImgSrc","imagesBlacklist","RegExp","test","validateAuthor","authorBlacklist","validateDescription","description","SmallCard","image","title","onDelete","whileHover","y","src","alt","Comment","Comments","saveComment","useState","setComment","SocialButtons","FacebookShareButton","RedditShareButton","TwitterShareButton","TelegramShareButton","articleId","moment","format","activeArticle","setActiveArticle","reader","setReader","handleRead","handleDelete","length","style","backgroundImage","href","PostPlaceholder","Search","handleSubmit","keyword","setKeyord","event","preventDefault","trim","memo","published","showButtons","onSave","rel","data-tooltip","effect","isArticlesArray","categoriesList","mapDispatch","requestArticles","category","country","subtract","news","regKeyword","setCategory","navigation","setNavigation","placeholders","Array","fill","main","categoryItem","index","changeCategory","encodedKeyword","encodeURIComponent","autoLogin","getItem","formattedDate","setTheme","routes","path","component","Profile","Feed","Saved","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.67495afe.chunk.js","sourcesContent":["import { FeedState } from './ReducersTypes'\r\nimport { ActionTypes } from '../actions/ActionsTypes'\r\nimport {\r\n  SET_ARTICLES,\r\n  SET_ERROR,\r\n  SHOW_LOADER,\r\n  HIDE_LOADER,\r\n  SET_SAVED,\r\n  AUTH_LOGOUT,\r\n  SET_COMMENTS,\r\n} from '../constants'\r\n\r\nexport const initialState: FeedState = {\r\n  loading: false,\r\n  articles: null,\r\n  saved: null,\r\n  error: null,\r\n  comments: null\r\n}\r\n\r\nexport default (state = initialState, action: ActionTypes): FeedState => {\r\n  switch (action.type) {\r\n    case SET_ARTICLES:\r\n      return {\r\n        ...state,\r\n        articles: [...action.payload],\r\n        error: null,\r\n      }\r\n    case SHOW_LOADER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case HIDE_LOADER:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      }\r\n    case SET_ERROR: {\r\n      return {\r\n        ...state,\r\n        articles: null,\r\n        error: action.payload,\r\n      }\r\n    }\r\n    case SET_COMMENTS: {\r\n      return {\r\n        ...state,\r\n        comments: action.payload,\r\n      }\r\n    }\r\n    case SET_SAVED:\r\n      return { ...state, saved: action.payload }\r\n    case AUTH_LOGOUT:\r\n      return { ...state, saved: null }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ActionTypes } from '../actions/ActionsTypes'\r\nimport { ProfileState } from './ReducersTypes'\r\nimport {\r\n  SET_REGION,\r\n  AUTH_LOGOUT,\r\n  AUTH_SUCCESS,\r\n  SHOW_LOADER,\r\n  HIDE_LOADER,\r\n  SET_NAME,\r\n  SET_LANGUAGE,\r\n} from '../constants'\r\n\r\nexport const initialState: ProfileState = {\r\n  isAuth: false,\r\n  userId: null,\r\n  name: null,\r\n  token: null,\r\n  region: { label: 'Europe', value: 'EU' },\r\n  language: { label: 'English', value: 'en' },\r\n  loading: false,\r\n}\r\n\r\nexport default (state = initialState, action: ActionTypes): ProfileState => {\r\n  switch (action.type) {\r\n    case SET_REGION:\r\n      return { ...state, region: action.region }\r\n    case SET_LANGUAGE:\r\n      return { ...state, language: action.language }\r\n    case SET_NAME:\r\n      return { ...state, name: action.name }\r\n    case AUTH_SUCCESS:\r\n      return { ...state, isAuth: true, userId: action.userId, token: action.token }\r\n    case AUTH_LOGOUT:\r\n      return { ...state, ...initialState }\r\n    case SHOW_LOADER:\r\n      return { ...state, loading: true }\r\n    case HIDE_LOADER:\r\n      return { ...state, loading: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport articlesReducer from './articlesReducer'\r\nimport profileReducer from './profileReducer';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  profile: profileReducer,\r\n  articles: articlesReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","export const SHOW_LOADER = 'SHOW_LOADER';\r\nexport const HIDE_LOADER = 'HIDE_LOADER';\r\n\r\nexport const SET_ARTICLES = 'SET_ARTICLES';\r\nexport const SET_SAVED = 'SET_SAVED'\r\nexport const SET_ERROR = 'SET_ERROR';\r\n\r\nexport const SUBSCRIBE = 'SUBSCRIBE';\r\nexport const UNSUBSCRIBE = 'UNSUBSCRIBE';\r\n\r\nexport const SET_REGION = 'SET_REGION'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_NAME = 'SET_NAME'\r\nexport const SET_LANGUAGE = 'SET_LANGUAGE'\r\n\r\nexport const SET_COMMENTS = 'SET_COMMENTS'\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios'\r\n\r\nexport const authAxios = axios.create({\r\n  baseURL: 'https://identitytoolkit.googleapis.com/v1/accounts',\r\n})\r\n\r\nexport const userAxios = axios.create({\r\n  baseURL: 'https://news-app-4c398.firebaseio.com/',\r\n})\r\n\r\nexport const atriclesAxios = axios.create({\r\n  baseURL: 'https://api.currentsapi.services/v1/',\r\n})\r\n","import { Language, Region } from './../reducers/ReducersTypes'\r\nimport { AUTH_SUCCESS, AUTH_LOGOUT, SET_NAME, SET_LANGUAGE, SET_REGION } from '../constants'\r\nimport { ActionTypes, AuthResponse, ThunkAsync, Thunk, UserData } from './ActionsTypes'\r\nimport { showLoader, hideLoader } from './commonActions'\r\nimport { FormikValues } from 'formik'\r\nimport { AuthFunction } from '../../Components/Form/AuthTypes'\r\nimport { authAxios, userAxios } from '../../axios/axios'\r\n\r\nexport const auth: AuthFunction = (\r\n  values: FormikValues,\r\n  setStatus: (status: any) => void,\r\n  isLogin: boolean\r\n): ThunkAsync => async (dispatch) => {\r\n  dispatch(showLoader())\r\n  const authData = {\r\n    email: values.email,\r\n    password: values.password,\r\n    returnSecureToken: true,\r\n  }\r\n  let url\r\n\r\n  isLogin\r\n    ? (url = `:signInWithPassword?key=${process.env.REACT_APP_FIREBASE_API_KEY}`)\r\n    : (url = `:signUp?key=${process.env.REACT_APP_FIREBASE_API_KEY}`);\r\n\r\n  try {\r\n    const response: AuthResponse = await authAxios.post(url, authData)\r\n    const { expiresIn, idToken, localId } = response.data\r\n\r\n    const expirationDate = new Date(new Date().getTime() + +expiresIn * 1000)\r\n\r\n    localStorage.setItem('token', idToken)\r\n    localStorage.setItem('userId', localId)\r\n    localStorage.setItem('expirationDate', expirationDate.toString())\r\n\r\n    dispatch(authSuccess(localId, idToken))\r\n  } catch (e) {\r\n    let warning\r\n    switch (e.response.data.error.message) {\r\n      case 'EMAIL_EXISTS':\r\n        warning = 'This email is already registered'\r\n        break\r\n      case 'EMAIL_NOT_FOUND':\r\n        warning = \"This email haven't been registered yet\"\r\n        break\r\n      default:\r\n        warning = 'Email or password is incorrect'\r\n    }\r\n    setStatus({ generall: warning })\r\n  }\r\n  dispatch(hideLoader())\r\n}\r\n\r\nconst authSuccess = (userId: string, token: string): ActionTypes => {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    userId,\r\n    token,\r\n  }\r\n}\r\n\r\nexport const logout = (): ActionTypes => {\r\n  localStorage.removeItem('token')\r\n  localStorage.removeItem('userId')\r\n  localStorage.removeItem('expirationDate')\r\n  return {\r\n    type: AUTH_LOGOUT,\r\n  }\r\n}\r\n\r\nexport const autoLogin = (): Thunk => (dispatch) => {\r\n  const token = localStorage.getItem('token')\r\n  const userId = localStorage.getItem('userId')\r\n  const expirationDate = localStorage.getItem('expirationDate')\r\n\r\n  if (!token || !userId || !expirationDate) {\r\n    dispatch(logout())\r\n  } else {\r\n    const formattedDate = new Date(expirationDate)\r\n    if (formattedDate <= new Date()) dispatch(logout())\r\n    else {\r\n      dispatch(authSuccess(userId, token))\r\n      dispatch(getUserData())\r\n      dispatch(autoLogout((formattedDate.getTime() - new Date().getTime()) / 1000))\r\n    }\r\n  }\r\n}\r\n\r\nconst autoLogout = (time: number): Thunk => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch(logout())\r\n  }, time * 1000)\r\n}\r\n\r\nexport const setRegion = (region: Region): ActionTypes => {\r\n  return {\r\n    type: SET_REGION,\r\n    region,\r\n  }\r\n}\r\n\r\nexport const sendRegion = (region: Region): ThunkAsync => async (dispatch, getState) => {\r\n  dispatch(setRegion(region))\r\n  const id = getState().profile.userId\r\n  const token = getState().profile.token\r\n  try {\r\n    await userAxios.patch(`/users/${id}.json?auth=${token}`, {\r\n      region,\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport const sendName = (): ThunkAsync => async (dispatch, getState) => {\r\n  const userId = getState().profile.userId\r\n  const name = getState().profile.name\r\n  const token = getState().profile.token\r\n  try {\r\n    await userAxios.patch(`/users/${userId}.json?auth=${token}`, { name })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport const sendLanguage = (language: Language): ThunkAsync => async (dispatch, getState) => {\r\n  dispatch(setLanguage(language))\r\n  const userId = getState().profile.userId\r\n  const token = getState().profile.token\r\n  try {\r\n    await userAxios.patch(`/users/${userId}.json?auth=${token}`, { language })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport const setName = (name: string): ActionTypes => {\r\n  return {\r\n    type: SET_NAME,\r\n    name,\r\n  }\r\n}\r\n\r\nexport const setLanguage = (language: Language): ActionTypes => {\r\n  return {\r\n    type: SET_LANGUAGE,\r\n    language,\r\n  }\r\n}\r\n\r\nexport const getUserData = (): ThunkAsync => async (dispatch, getState) => {\r\n  dispatch(showLoader())\r\n  const id = getState().profile.userId\r\n  if (!id) {\r\n    dispatch(hideLoader())\r\n    return\r\n  }\r\n  const token = getState().profile.token\r\n  try {\r\n    const response = await userAxios.get<UserData>(`/users/${id}.json?auth=${token}`)\r\n    if (response.data) {\r\n      response.data.name && dispatch(setName(response.data.name))\r\n      response.data.region && dispatch(setRegion(response.data.region))\r\n      response.data.language && dispatch(setLanguage(response.data.language))\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  dispatch(hideLoader())\r\n}\r\n","import { ActionTypes } from './ActionsTypes';\r\nimport { SHOW_LOADER, HIDE_LOADER } from '../constants';\r\n\r\nexport const showLoader = (): ActionTypes => {\r\n  return {\r\n    type: SHOW_LOADER,\r\n  };\r\n};\r\n\r\nexport const hideLoader = (): ActionTypes => {\r\n  return {\r\n    type: HIDE_LOADER,\r\n  };\r\n};\r\n\r\n","import React, { FC } from 'react';\r\nimport './ThemeToggler.scss';\r\n\r\ntype Props = {\r\n  theme: 'light' | 'dark';\r\n  onChange: () => void;\r\n};\r\n\r\nconst ThemeToggle: FC<Props> = ({ theme, onChange }) => {\r\n  let isChecked: boolean;\r\n  theme === 'light' ? (isChecked = false) : (isChecked = true);\r\n\r\n  return (\r\n    <div className='toggle-wrapper'>\r\n      <input type='checkbox' checked={isChecked} id='theme-toggle' onChange={onChange} />\r\n      <label htmlFor='theme-toggle' className='toggle'>\r\n        <span className='toggle__ray'>\r\n          <span className='ray ray--1'></span>\r\n          <span className='ray ray--2'></span>\r\n          <span className='ray ray--3'></span>\r\n        </span>\r\n        <span className='toggle__items'>\r\n          <span className='glare'></span>\r\n          <span className='dot dot--1'></span>\r\n          <span className='dot dot--2'></span>\r\n          <span className='dot dot--3'></span>\r\n        </span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n","import React, { FC } from 'react';\r\nimport { NavLink, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport './Sidebar.scss';\r\n\r\nexport type Link = {\r\n  to: string;\r\n  exact?: boolean;\r\n  icon: string;\r\n  tooltip: string;\r\n  flow: 'right' | 'left' | 'top' | 'bottom';\r\n};\r\n\r\ntype SidebarProps = RouteComponentProps & { isAuthenticated: boolean };\r\n\r\nconst Sidebar: FC<SidebarProps> = ({ isAuthenticated, children }) => {\r\n  const links: Array<Link> = [\r\n    { to: '/profile', tooltip: 'Profile', icon: 'fas fa-user-circle', flow: 'right' },\r\n    { to: '/', exact: true, tooltip: 'Feed', icon: 'fas fa-stream', flow: 'right' },\r\n  ];\r\n\r\n  isAuthenticated &&\r\n    links.push(\r\n      { to: '/saved', tooltip: 'Saved', icon: 'fas fa-bookmark', flow: 'right' }\r\n    )\r\n\r\n  return (\r\n    <nav className='Sidebar'>\r\n      <ul className='Sidebar__wrapper'>\r\n        {links.map((link) => (\r\n          <li className='Sidebar__item' key={link.tooltip}>\r\n            <NavLink {...link} data-testid={`${link.tooltip}-link`}>\r\n              <i className={`${link.icon}`}></i>\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {children}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default withRouter(Sidebar);\r\n","export const routerVariants = {\r\n  hidden: { opacity: 0 },\r\n  visible: { opacity: 1, transition: { type: 'tween' } },\r\n  exit: { opacity: 0 },\r\n}\r\n\r\nexport const savedVariants = {\r\n  hidden: { opacity: 0, x: '-100%' },\r\n  visible: {\r\n    opacity: 1,\r\n    x: 0,\r\n    transition: {\r\n      type: 'tween',\r\n      staggerChildren: 0.03,\r\n    },\r\n  },\r\n}\r\n\r\nexport const readerVariants = {\r\n  hidden: { x: '+100%' },\r\n  visible: {\r\n    x: 0,\r\n    transition: {\r\n      type: 'tween',\r\n    },\r\n  },\r\n  exit: {x: '+100%', transition: {\r\n    type: 'tween'\r\n  }}\r\n}\r\n","import React, { FC, ChangeEvent } from 'react'\r\nimport './Input.scss'\r\n\r\ntype InputProps = {\r\n  label: string\r\n  value: string | number\r\n  type: 'text' | 'email' | 'password' | 'textarea'\r\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n  onBlur: () => void\r\n}\r\n\r\nexport const Input: FC<InputProps> = ({ label, type, value, onChange, onBlur }) => {\r\n  const id = Math.random().toString(36).substr(2, 9)\r\n  return (\r\n    <div className='Input'>\r\n      <label className='Input__label' htmlFor={`input${id}`}>\r\n        {label}:\r\n      </label>\r\n      <input\r\n        id={`input${id}`}\r\n        className='Input__field'\r\n        onChange={onChange}\r\n        type={type}\r\n        value={value}\r\n        onBlur={onBlur}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { FC, DetailedHTMLProps, ButtonHTMLAttributes } from 'react';\r\nimport classes from './Button.module.scss';\r\n\r\ntype Button = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> & {\r\n  btnType: 'primary' | 'secondary';\r\n  onClick: () => void;\r\n  disabled?: boolean;\r\n  value: string;\r\n  type?: 'button' | 'submit' | 'reset';\r\n};\r\n\r\nconst Button: FC<Button> = ({ btnType, onClick, disabled, value, type }) => (\r\n  <button type={type} className={classes[btnType]} onClick={onClick} disabled={disabled}>\r\n    {value}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport classes from './Loader.module.css';\r\n \r\nconst Loader = () => (\r\n  <div className={classes.lds_ellipsis} data-testid=\"loader\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nexport default Loader;","import { Formik, Form, FormikValues, ErrorMessage, FormikHelpers, FormikProps, Field } from 'formik'\r\nimport { FieldType, AuthProps } from './AuthTypes'\r\nimport React, { FC } from 'react'\r\nimport Button from '../UI/Button/Button'\r\nimport Loader from '../UI/Loader/Loader'\r\nimport * as Yup from 'yup'\r\nimport './AuthForm.scss'\r\n\r\nconst initialValues: FormikValues = { email: '', password: '' }\r\n\r\nconst onSubmit = async (values: FormikValues, actions: FormikHelpers<FormikValues>) => {\r\n  actions.setSubmitting(false)\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().email().required('The field is required'),\r\n  password: Yup.string()\r\n    .min(6, 'The password should contain at least 6 symbols')\r\n    .required('The field is required'),\r\n  generall: Yup.string(),\r\n})\r\n\r\nconst renderError = (message: string) => {\r\n  return (\r\n    <span className='Form__error'>\r\n      <i className='fas fa-exclamation-circle'></i>\r\n      {message}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst renderField = (type: FieldType, name?: string) => {\r\n  return (\r\n    <Field\r\n      className='Form__field'\r\n      type={type}\r\n      name={name || type}\r\n      id={name || type}\r\n      placeholder={\r\n        name\r\n          ? name.replace(/^\\w/, (l) => l.toUpperCase())\r\n          : type.replace(/^\\w/, (l) => l.toUpperCase())\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nconst AuthForm: FC<AuthProps> = ({ handleRegister, isLoading, handleLogin }) => {\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n      {(props: FormikProps<FormikValues>) => (\r\n        <Form name='auth' className='Form'>\r\n          <div className='Form__wrapper'>\r\n            {renderField('email')}\r\n            <ErrorMessage name='email' render={renderError} />\r\n          </div>\r\n          <div className='Form__wrapper'>\r\n            {renderField('password')}\r\n            <ErrorMessage name='password' render={renderError} />\r\n          </div>\r\n          <div className='Form__wrapper-buttons'>\r\n            <Button\r\n              type='button'\r\n              btnType='primary'\r\n              disabled={!(props.isValid && props.dirty)}\r\n              onClick={() => handleLogin(props.values, props.setStatus, true)}\r\n              value='Login'\r\n            />\r\n            <Button\r\n              type='button'\r\n              btnType='secondary'\r\n              onClick={() => handleRegister(props.values, props.setStatus, false)}\r\n              disabled={!(props.isValid && props.dirty)}\r\n              value='Register'\r\n            />\r\n          </div>\r\n          {isLoading ? (\r\n            <div className='Form__loader'>\r\n              <Loader />\r\n            </div>\r\n          ) : (\r\n            props.status && <span className='Form__error-form'>{props.status.generall}</span>\r\n          )}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default AuthForm\r\n","import React, { ChangeEvent } from 'react'\r\nimport './Select.scss'\r\n\r\ntype DeferTypeInference<T> = [T][T extends any ? 0 : never]\r\n\r\nexport type SelectProps<T extends { label: string; value: string }> = {\r\n  label: string\r\n  name: string\r\n  items: T[]\r\n  onChange: (e: ChangeEvent<HTMLSelectElement> & { target: { value: T } }) => void\r\n  defValue: DeferTypeInference<T>\r\n}\r\n\r\nconst Select = <T extends { label: string; value: string }>({\r\n  label,\r\n  name,\r\n  items,\r\n  onChange,\r\n  defValue,\r\n}: SelectProps<T>) => {\r\n  return (\r\n    <div className='Select'>\r\n      <label className='Select__label' htmlFor={name}>\r\n        {label}:\r\n      </label>\r\n      <select\r\n        className='Select__options'\r\n        name={name}\r\n        id={name}\r\n        onChange={onChange}\r\n        defaultValue={defValue.value}>\r\n        {items.map((item) => (\r\n          <option value={item.value} key={item.value} data-testid='select-option'>\r\n            {item.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import React, { FC, ChangeEvent, useEffect } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport {\r\n  auth,\r\n  sendRegion,\r\n  logout,\r\n  sendName,\r\n  setName,\r\n  getUserData,\r\n  sendLanguage\r\n} from '../../../redux/actions/profileActions'\r\nimport { MapStateTypes, MapDispatchTypes } from './ProfileTypes'\r\nimport { routerVariants } from '../../../utilities/js/variants'\r\nimport { RootState } from '../../../redux/reducers/rootReducer'\r\nimport { Region, Language } from '../../../redux/reducers/ReducersTypes'\r\nimport { motion } from 'framer-motion'\r\nimport { Input } from '../../UI/Input/Input'\r\nimport AuthForm from '../../Form/AuthForm'\r\nimport Button from '../../UI/Button/Button'\r\nimport Select from '../../UI/Select/Select'\r\nimport './Profile.scss'\r\nimport Loader from '../../UI/Loader/Loader'\r\n\r\nconst regions: Region[] = [\r\n  { label: 'USA', value: 'US' },\r\n  { label: 'Russia', value: 'RU' },\r\n  { label: 'Europe', value: 'EU' },\r\n]\r\n\r\nconst languages: Language[] = [\r\n  { label: 'English', value: 'en' },\r\n  { label: 'Русский', value: 'ru' },\r\n  { label: 'German', value: 'de' },\r\n]\r\n\r\nexport const Profile: FC<ProfileProps> = ({\r\n  isAuthentiphicated,\r\n  auth,\r\n  loading,\r\n  logout,\r\n  sendRegion,\r\n  sendLanguage,\r\n  sendName,\r\n  user,\r\n  setName,\r\n  getUserData,\r\n}) => {\r\n  useEffect(() => {\r\n    getUserData()\r\n  }, [getUserData, isAuthentiphicated])\r\n\r\n  const onCoutryChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const region = regions.find((el) => el.value === e.target.value) as Region\r\n    sendRegion(region)\r\n  }\r\n\r\n  const onLanguageChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const item = languages.find((el) => el.value === e.target.value) as Language\r\n    sendLanguage(item)\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      variants={routerVariants}\r\n      initial='hidden'\r\n      animate='visible'\r\n      exit='exit'\r\n      className='Profile'>\r\n      {isAuthentiphicated ? (\r\n        <div className='Profile__settings'>\r\n          <h1 className='Profile__title'>Settings</h1>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <div className='Profile__inputs'>\r\n              <Select\r\n                label='Select your region'\r\n                defValue={regions.find((el) => user.region.value === el.value)!}\r\n                name='countries'\r\n                items={regions}\r\n                onChange={onCoutryChange}\r\n              />\r\n              <Select\r\n                label='Select news language'\r\n                defValue={languages.find((el) => user.language.value === el.value)!}\r\n                name='languages'\r\n                items={languages}\r\n                onChange={onLanguageChange}\r\n              />\r\n              <Input\r\n                type='text'\r\n                label='Name'\r\n                onChange={(e) => setName(e.target.value)}\r\n                value={user.name ?? ''}\r\n                onBlur={sendName}\r\n              />\r\n              <Button btnType='primary' onClick={logout} value='Logout' />\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className='Profile__intro'>\r\n            <h1 className='Profile__title'>Newsium</h1>\r\n            <span>News from all over the world in one place</span>\r\n          </div>\r\n          <div className='Profile__form'>\r\n            <h2 className='Profile__subtitle'>Log in to get the full access</h2>\r\n            <AuthForm handleRegister={auth} isLoading={loading} handleLogin={auth} />\r\n            <div className='Profile__info'>\r\n              <span>Creating an account will give you the ability to:</span>\r\n              <ul>\r\n                <li>Save articles to read them later</li>\r\n                <li>Select the region and news language</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStateTypes => ({\r\n  isAuthentiphicated: state.profile.isAuth,\r\n  loading: state.profile.loading,\r\n  user: {\r\n    name: state.profile.name,\r\n    language: state.profile.language,\r\n    region: state.profile.region,\r\n  },\r\n})\r\n\r\nconst mapDispatchToProps: MapDispatchTypes = {\r\n  auth,\r\n  sendRegion,\r\n  logout,\r\n  sendName,\r\n  setName,\r\n  getUserData,\r\n  sendLanguage,\r\n}\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps)\r\ntype ProfileProps = ConnectedProps<typeof connector>\r\n\r\nexport default connector(Profile)\r\n","import { CommentType } from './../../Components/Comments/Comments'\r\nimport { Article, APIResponseType, Category } from '../reducers/ReducersTypes'\r\nimport { SET_ARTICLES, SET_ERROR, SET_SAVED, SET_COMMENTS } from '../constants'\r\nimport { ActionTypes, ThunkAsync } from './ActionsTypes'\r\nimport { showLoader, hideLoader } from './commonActions'\r\nimport { atriclesAxios, userAxios } from '../../axios/axios'\r\nimport moment from 'moment'\r\n\r\nexport const requestArticles = (category: Category = 'all', keyword?: string): ThunkAsync => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const language = getState().profile.language.value\r\n  const country = getState().profile.region.value\r\n  let url: string\r\n  category !== 'all'\r\n    ? (url = `latest-news?country=${country}&language=${language}&category=${category}&apiKey=${process.env.REACT_APP_API_KEY}`)\r\n    : keyword\r\n    ? (url = `search?country=${country}&language=${language}&start_date=${moment()\r\n        .subtract(1, 'days')\r\n        .format()}&apiKey=${process.env.REACT_APP_API_KEY}`)\r\n    : (url = `latest-news?country=${country}&language=${language}&apiKey=${process.env.REACT_APP_API_KEY}`)\r\n\r\n  dispatch(showLoader())\r\n  try {\r\n    const response = await atriclesAxios.get<APIResponseType>(url)\r\n    if (response.data.news.length === 0)\r\n      dispatch(setError('Nothing has been found. Please change the region or the language.'))\r\n    else if (keyword) {\r\n      const regKeyword = new RegExp(`${keyword}`, 'g')\r\n      const articles = response.data.news.filter(\r\n        (article) => regKeyword.test(article.description) || regKeyword.test(article.title)\r\n      )\r\n      articles.length > 0\r\n        ? dispatch(setArticles(articles))\r\n        : dispatch(setError('Nothing has been found.'))\r\n    } else {\r\n      let articles = response.data.news.map((article) => ({\r\n        ...article,\r\n        description: validateDescription(article.description),\r\n        author: validateAuthor(article.author),\r\n        image: article.image === 'None' ? './placeholder.jpg' : validateImgSrc(article.image),\r\n        isSaved: false,\r\n      }))\r\n      if (getState().profile.userId) {\r\n        await dispatch(requestSaved())\r\n        const savedArticles = getState().articles.saved\r\n        if (savedArticles) {\r\n          articles = articles.map((article) => ({\r\n            ...article,\r\n            isSaved: savedArticles.find((el) => el.id === article.id) ? true : false,\r\n          }))\r\n        }\r\n      }\r\n      dispatch(setArticles(articles))\r\n    }\r\n  } catch (e) {\r\n    dispatch(setError('Server error. Please, try again later.'))\r\n  }\r\n  dispatch(hideLoader())\r\n}\r\n\r\nexport const toggleArticle = (article: Article, refreshFeed = true): ThunkAsync => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const userId = getState().profile.userId\r\n  const feedAritcles = getState().articles.articles\r\n  const savedArticles = getState().articles.saved\r\n  const token = getState().profile.token\r\n  let articles = [article]\r\n\r\n  if (savedArticles) {\r\n    const isSaved = savedArticles.find((item) => item.id === article.id)\r\n    if (isSaved) {\r\n      articles = savedArticles.filter((el) => el.id !== article.id)\r\n    } else {\r\n      articles = [article, ...savedArticles]\r\n    }\r\n  }\r\n\r\n  dispatch(setSaved(articles))\r\n\r\n  if (refreshFeed) {\r\n    feedAritcles &&\r\n      dispatch(\r\n        setArticles(\r\n          feedAritcles.map((el) => {\r\n            return el.id === article.id ? { ...el, isSaved: !el.isSaved } : el\r\n          })\r\n        )\r\n      )\r\n  }\r\n\r\n  try {\r\n    await userAxios.patch(`/users/${userId}.json?auth=${token}`, { articles })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst setSaved = (articles: Article[]): ActionTypes => {\r\n  return {\r\n    type: SET_SAVED,\r\n    payload: articles,\r\n  }\r\n}\r\n\r\nexport const requestSaved = (): ThunkAsync => async (dispatch, getState) => {\r\n  const userId = getState().profile.userId\r\n  const token = getState().profile.token\r\n  try {\r\n    const response = await userAxios.get<Article[]>(`/users/${userId}/articles.json?auth=${token}`)\r\n    response.data && dispatch(setSaved(response.data))\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const getComments = (id: string): ThunkAsync => async (dispatch) => {\r\n  dispatch(showLoader())\r\n  try {\r\n    const response = await userAxios.get<{ [id: string]: CommentType }>(`/comments/${id}.json`)\r\n    if (response.data) {\r\n      const comments = Object.entries(response.data).reduce((acc, el) => {\r\n        const comment: CommentType = {\r\n          id: el[0],\r\n          message: el[1].message,\r\n          date: el[1].date,\r\n          author: el[1].author,\r\n        }\r\n        return [...acc, comment]\r\n      }, [] as CommentType[])\r\n      dispatch(setComments(comments))\r\n    } else {\r\n      dispatch(setComments(null))\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  dispatch(hideLoader())\r\n}\r\n\r\nexport const saveComment = (message: string, articleId: string): ThunkAsync => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch(showLoader())\r\n  const comment: Omit<CommentType, 'id'> = {\r\n    author: getState().profile.name ?? 'Anonymous',\r\n    message,\r\n    date: moment().format('MMM Do YY'),\r\n  }\r\n  try {\r\n    await userAxios.post(`/comments/${articleId}.json`, { ...comment })\r\n    dispatch(getComments(articleId))\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  dispatch(hideLoader())\r\n}\r\n\r\nconst setArticles = (articles: Article[]): ActionTypes => {\r\n  return {\r\n    type: SET_ARTICLES,\r\n    payload: articles,\r\n  }\r\n}\r\n\r\nconst setComments = (comments: CommentType[] | null): ActionTypes => {\r\n  return {\r\n    type: SET_COMMENTS,\r\n    payload: comments,\r\n  }\r\n}\r\n\r\nconst setError = (error: string): ActionTypes => {\r\n  return {\r\n    type: SET_ERROR,\r\n    payload: error,\r\n  }\r\n}\r\n\r\nconst validateImgSrc = (url: null | string): string => {\r\n  const imagesBlacklist = new RegExp(\r\n    /(.*kubrick.*)|(.*wthr.*)|(.*nydailynews.*)|(.*statesman.*)|(.*arabnews.*)|(.*washingtonpost.*)/\r\n  )\r\n  return url && !imagesBlacklist.test(url) ? url : './placeholder.jpg'\r\n}\r\n\r\nconst validateAuthor = (author: null | string): string => {\r\n  const authorBlacklist = new RegExp(/.*arxiv.*/)\r\n  return author && !authorBlacklist.test(author) ? author.toUpperCase() : ''\r\n}\r\n\r\nconst validateDescription = (description: null | string): string => (description ? description : '')\r\n","import React, { FC } from 'react'\r\nimport { Article } from '../../redux/reducers/ReducersTypes'\r\nimport { motion } from 'framer-motion'\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\nimport './SmallCard.scss'\r\n\r\nconst variants = {\r\n  hidden: { x: '-100%' },\r\n  visible: { x: 0 },\r\n  exit: {\r\n    x: '-100%'\r\n  }\r\n}\r\n\r\nconst validateImgSrc = (url: null | string): string => {\r\n  const imagesBlacklist = new RegExp(\r\n    /(.*kubrick.*)|(.*wthr.*)|(.*nydailynews.*)|(.*statesman.*)|(.*arabnews.*)|(.*washingtonpost.*)/\r\n  )\r\n  return url && !imagesBlacklist.test(url) ? url : './placeholder.jpg'\r\n}\r\n\r\nexport type CardProps = Pick<Article, 'title' | 'image' | 'id'> & {\r\n  onClick: (id: Article['id']) => void\r\n  onDelete: (id: Article['id']) => void\r\n}\r\n\r\nconst SmallCard: FC<CardProps> = ({ image, title, id, onClick, onDelete }) => {\r\n  return (\r\n    <motion.div variants={variants} initial='hidden' exit='exit'  whileHover={{ y: -2 }} className='SmallCard'>\r\n      <button className='SmallCard__btn' onClick={() => onDelete(id)}>\r\n        <i className='fas fa-times' />\r\n      </button>\r\n      <div className='SmallCard__info' onClick={() => onClick(id)}>\r\n        <img src={validateImgSrc(image)} alt='Article' className='SmallCard__image' />\r\n        <span className='SmallCard__title'>{title}</span>\r\n      </div>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default SmallCard\r\n","import React, { FC } from 'react'\r\nimport { CommentType } from '../Comments'\r\nimport './Comment.scss'\r\n\r\nconst Comment: FC<{ comment: CommentType }> = ({ comment }) => {\r\n  return (\r\n    <div className='Comment'>\r\n      <i className='fas fa-user-circle' />\r\n      <div className='Comment__area'>\r\n        <div className='Comment__info'>\r\n          <span className='Comment__author'>{comment.author}</span>\r\n          <span className='Comment__date'>{comment.date}</span>\r\n        </div>\r\n        <span className='Comment__message'>{comment.message}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comment\r\n","import React, { useState, FC, ChangeEvent } from 'react'\r\nimport Comment from './Comment/Comment'\r\nimport Button from '../UI/Button/Button'\r\nimport Loader from '../UI/Loader/Loader'\r\nimport './Comments.scss'\r\n\r\nexport type CommentType = {\r\n  author: string\r\n  id: string\r\n  message: string\r\n  date: string\r\n}\r\n\r\ntype CommentsProps = {\r\n  comments: null | CommentType[]\r\n  saveComment: (comment: CommentType['message']) => void\r\n  loading: boolean\r\n}\r\n\r\nconst Comments: FC<CommentsProps> = ({ comments, saveComment, loading }) => {\r\n  const [comment, setComment] = useState('')\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setComment(e.target.value)\r\n  }\r\n\r\n  const handleSave = () => {\r\n    comment && saveComment(comment)\r\n    setComment('')\r\n  }\r\n\r\n  return (\r\n    <div className='Comments'>\r\n      {loading ? (\r\n        <div className='Comments__loader'>\r\n          <Loader />\r\n        </div>\r\n      ) : (\r\n        comments && comments.map((comment) => <Comment comment={comment} key={comment.id} />)\r\n      )}\r\n      <div className='Comments__field'>\r\n        <textarea\r\n          className='Comments__input'\r\n          placeholder='Add a comment...'\r\n          onChange={handleChange}\r\n          value={comment}\r\n        />\r\n        <Button type='button' btnType='primary' onClick={handleSave} value='Submit' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","import React from 'react'\r\nimport {\r\n  FacebookShareButton,\r\n  RedditShareButton,\r\n  TelegramShareButton,\r\n  TwitterShareButton,\r\n} from 'react-share'\r\nimport './SocialButtons.scss'\r\n\r\nexport const SocialButtons = ({ url }: { url: string }) => {\r\n  return (\r\n    <div className='Social' data-testid='Social'>\r\n      <FacebookShareButton url={url} children={<i className='fab fa-facebook' />} />\r\n      <RedditShareButton url={url} children={<i className='fab fa-reddit' />} />\r\n      <TwitterShareButton url={url} children={<i className='fab fa-twitter' />} />\r\n      <TelegramShareButton url={url} children={<i className='fab fa-telegram' />} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default SocialButtons\r\n","import React, { FC, useEffect, useState } from 'react'\r\nimport {\r\n  requestSaved,\r\n  toggleArticle,\r\n  saveComment,\r\n  getComments,\r\n} from '../../../redux/actions/articlesActions'\r\nimport { PropsTypes, MapStateTypes, MapDispatchTypes } from './SavedTypes'\r\nimport { savedVariants, readerVariants } from '../../../utilities/js/variants'\r\nimport { RootState } from '../../../redux/reducers/rootReducer'\r\nimport { Article } from '../../../redux/reducers/ReducersTypes'\r\nimport { connect } from 'react-redux'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport SmallCard from '../../SmallCard/SmallCard'\r\nimport Comments from '../../Comments/Comments'\r\nimport './Saved.scss'\r\nimport SocialButtons from '../../SocialButtons/SocialButtons'\r\n\r\nconst Saved: FC<PropsTypes> = ({\r\n  loading,\r\n  requestSaved,\r\n  articles,\r\n  toggleArticle,\r\n  comments,\r\n  saveComment,\r\n  getComments,\r\n}) => {\r\n  useEffect(() => {\r\n    requestSaved()\r\n  }, [requestSaved])\r\n\r\n  const [activeArticle, setActiveArticle] = useState<null | Article>(null)\r\n  const [reader, setReader] = useState(false) // for the mobile version\r\n\r\n  const handleRead = (id: string) => {\r\n    const article = articles!.find((el) => el.id === id) as Article\r\n    setActiveArticle(article)\r\n    getComments(article.id)\r\n    setReader(true)\r\n  }\r\n\r\n  const handleDelete = (id: Article['id']) => {\r\n    const article = articles!.find((el) => el.id === id)\r\n    toggleArticle(article!, false)\r\n  }\r\n\r\n  return (\r\n    <motion.div className='Saved' variants={savedVariants} initial='hidden' animate='visible'>\r\n      {articles && articles.length > 0 ? (\r\n        <div className='Saved__cards'>\r\n          {articles.map((article) => (\r\n            <SmallCard {...article} key={article.id} onDelete={handleDelete} onClick={handleRead} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <span className='Saved__message'>You haven't saved anything yet</span>\r\n      )}\r\n      <AnimatePresence>\r\n        {activeArticle && articles && articles.length > 0 && reader && (\r\n          <motion.div\r\n            variants={readerVariants}\r\n            initial='hidden'\r\n            animate='visible'\r\n            exit='exit'\r\n            className='Saved__reader active'\r\n            key='reader'>\r\n            <div\r\n              className='Saved__image'\r\n              style={{\r\n                backgroundImage:\r\n                  'linear-gradient(0deg, rgba(0,0,0,0.7047820104604341) 0%, rgba(255,255,255,0) 49%,' +\r\n                  'rgba(0,0,0,0.755202178527661) 100%),' +\r\n                  `url(${activeArticle.image})`,\r\n              }}>\r\n              <h1 className='Saved__title'>{activeArticle.title}</h1>\r\n              <SocialButtons url={activeArticle.url} />\r\n            </div>\r\n            <div className='Saved__info'>\r\n              <button className='Saved__closeBtn' onClick={() => setReader(false)}>\r\n                <i className='fas fa-arrow-left' />\r\n              </button>{' '}\r\n              <h2 className='Saved__description'>{activeArticle.description}</h2>\r\n              <span className='Saved__source'>{activeArticle.author}</span>\r\n              <a href={activeArticle.url} target='blank'>\r\n                <i className='fas fa-external-link-alt' title='Read the article' />\r\n              </a>\r\n              <div className='Saved__comments'>\r\n                <i className='fas fa-comment' />\r\n                <span>Comments</span>\r\n              </div>\r\n              <Comments\r\n                comments={comments}\r\n                saveComment={(message) => saveComment(message, activeArticle.id)}\r\n                loading={loading}\r\n              />\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): MapStateTypes => ({\r\n  loading: state.articles.loading,\r\n  articles: state.articles.saved,\r\n  error: state.articles.error,\r\n  comments: state.articles.comments,\r\n})\r\n\r\nconst mapDispatchToProps: MapDispatchTypes = {\r\n  requestSaved,\r\n  toggleArticle,\r\n  saveComment,\r\n  getComments,\r\n}\r\n\r\nexport default connect<MapStateTypes, MapDispatchTypes, {}, RootState>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Saved)\r\n","import React from 'react';\r\nimport './PostPlaceholder.scss'\r\n\r\nexport default function PostPlaceholder() {\r\n  return (\r\n    <div className='timeline-wrapper' data-testid='post-placeholder'>\r\n      <div className='timeline-item'>\r\n        <div className='animated-background'>\r\n          <div className='background-masker content-image'></div>\r\n          <div className='background-masker content-title'></div>\r\n          <div className='background-masker content-title-2'></div>\r\n          <div className='background-masker content-title-short'></div>\r\n          <div className='background-masker content-subtitle'></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { FC, useState } from \"react\";\r\nimport { ChangeEvent, FormEvent } from 'react';\r\nimport \"./Search.scss\";\r\n\r\nexport type PropsTypes = {\r\n  handleSubmit: (keyword: string) => void;\r\n};\r\n\r\nconst Search: FC<PropsTypes> = ({ handleSubmit }) => {\r\n  const [keyword, setKeyord] = useState<string>('');\r\n\r\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setKeyord(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    keyword.trim() && handleSubmit(keyword);\r\n  };\r\n\r\n  return (\r\n    <form className='Search' name='search' onSubmit={onSubmit}>\r\n      <input type='text' placeholder='Search' onChange={onChange} value={keyword} />\r\n      <button type='submit'>\r\n        <i className='fas fa-search'></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { FC, memo } from 'react'\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\r\nimport { Article } from '../../redux/reducers/ReducersTypes'\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\nimport './Card.scss'\r\n\r\nexport type CardProps = Article & {\r\n  showButtons?: boolean\r\n  onSave?: (article: Article) => void\r\n}\r\n\r\nconst Card: FC<CardProps> = ({\r\n  url,\r\n  image,\r\n  author,\r\n  title,\r\n  id,\r\n  isSaved,\r\n  published,\r\n  description,\r\n  showButtons,\r\n  onSave,\r\n}) => (\r\n  <div className='Card__wrapper'>\r\n    <a\r\n      href={url}\r\n      className='Card'\r\n      target='_blank'\r\n      rel='noopener noreferrer'\r\n      data-tooltip={description}>\r\n      <LazyLoadImage src={image} alt='Article' className='Card__image' effect='blur' />\r\n      <span className='Card__title'>{title.replace(/-\\s.*/, '')}</span>\r\n    </a>\r\n    <div className='Card__info'>\r\n      <div className='Card__source'>{author}</div>\r\n      {showButtons && (\r\n        <div className='Card__buttons'>\r\n          <input\r\n            checked={isSaved}\r\n            id={id}\r\n            type='checkbox'\r\n            onChange={() =>\r\n              onSave!({\r\n                id,\r\n                url,\r\n                image,\r\n                title,\r\n                author,\r\n                description,\r\n                published,\r\n                isSaved,\r\n              })\r\n            }></input>\r\n          <label htmlFor={id} className='Card__btn' title='Save'>\r\n            <i className='fas fa-bookmark' />\r\n          </label>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default memo(Card)\r\n","import React, { FC, memo } from 'react'\r\nimport PostPlaceholder from '../UI/PostPlaceholder/PostPlaceholder'\r\nimport { Article } from '../../redux/reducers/ReducersTypes'\r\nimport Card from '../Card/Card'\r\n\r\nexport type GridProps = {\r\n  items: Article[] | typeof PostPlaceholder[]\r\n  showButtons?: boolean\r\n  onSave?: (article: Article) => void\r\n}\r\n\r\nconst isArticlesArray = (article: any): article is Article[] => {\r\n  return typeof article?.[0]?.title === 'string'\r\n}\r\n\r\nconst Grid: FC<GridProps> = ({ items, showButtons, onSave }) => {\r\n  return (\r\n    <div className='row'>\r\n      {isArticlesArray(items)\r\n        ? items.map((item) => (\r\n            <div\r\n              key={item.id}\r\n              className='col-12 col-md-6 col-lg-4 col-xl-3'>\r\n              <Card {...item} showButtons={showButtons} onSave={onSave} />\r\n            </div>\r\n          ))\r\n        : items.map(() => (\r\n            <div key={Math.random()} className='col-12 col-md-6 col-lg-4 col-xl-3'>\r\n              <PostPlaceholder />\r\n            </div>\r\n          ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Grid)\r\n","import React, { FC, useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { RootState } from '../../../redux/reducers/rootReducer'\r\nimport { PropsTypes, MapStateTypes, MapDispatchTypes } from './FeedTypes'\r\nimport { requestArticles, toggleArticle } from '../../../redux/actions/articlesActions'\r\nimport { routerVariants } from '../../../utilities/js/variants'\r\nimport { Category } from '../../../redux/reducers/ReducersTypes'\r\nimport { motion } from 'framer-motion'\r\nimport PostPlaceholder from '../../UI/PostPlaceholder/PostPlaceholder'\r\nimport Search from '../../Search/Search'\r\nimport Grid from '../../Grid/Grid'\r\nimport './Feed.scss'\r\n\r\nexport const categoriesList: Category[] = [\r\n  'all',\r\n  'business',\r\n  'entertainment',\r\n  'health',\r\n  'science',\r\n  'sports',\r\n]\r\n\r\nconst Feed: FC<PropsTypes> = ({\r\n  articles,\r\n  loading,\r\n  requestArticles,\r\n  error,\r\n  isAuthenticated,\r\n  toggleArticle,\r\n}) => {\r\n  useEffect(() => {\r\n    requestArticles()\r\n  }, [requestArticles])\r\n\r\n  const [category, setCategory] = useState<Category>('all')\r\n  const [navigation, setNavigation] = useState<boolean>(false)\r\n\r\n  const toggleNavigation = () => {\r\n    setNavigation((navigation) => !navigation)\r\n  }\r\n\r\n  const changeCategory = (category: Category): void => {\r\n    requestArticles(category)\r\n    setCategory(category)\r\n  }\r\n\r\n  const onSearchSubmit = (keyword: string) => {\r\n    const encodedKeyword = encodeURIComponent(keyword.toString())\r\n    requestArticles('all', encodedKeyword)\r\n    setCategory('all')\r\n  }\r\n\r\n  const toCapital = (el: string) => {\r\n    return el.replace(/^\\w/, (l) => l.toUpperCase())\r\n  }\r\n\r\n  const placeholders = Array(8).fill(<PostPlaceholder />)\r\n\r\n  return (\r\n    <motion.main\r\n      variants={routerVariants}\r\n      initial='hidden'\r\n      animate='visible'\r\n      exit='exit'\r\n      className='Feed'>\r\n      <div className='Feed__header'>\r\n        <h1 className='Feed__main-title'>Latest news</h1>\r\n        <div\r\n          className={navigation ? 'Feed__btn active' : 'Feed__btn'}\r\n          onClick={toggleNavigation}\r\n          data-testid='burger'>\r\n          <span className='burger'> </span>\r\n        </div>\r\n        <div className={navigation ? 'Feed__nav active' : 'Feed__nav'}>\r\n          <ul className='Feed__categories_wrapper'>\r\n            {categoriesList.map((categoryItem: Category, index: number) => (\r\n              <li\r\n                className={categoryItem === category ? 'Feed__category active' : 'Feed__category'}\r\n                key={index}>\r\n                <button onClick={() => changeCategory(categoryItem)}>\r\n                  {toCapital(categoryItem)}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <Search handleSubmit={onSearchSubmit} />\r\n        </div>\r\n      </div>\r\n      <div className='Feed__wrapper container-fluid'>\r\n        <div className='Feed__content'>\r\n          {loading ? (\r\n            <Grid items={placeholders} />\r\n          ) : articles ? (\r\n            <Grid showButtons={isAuthenticated} items={articles} onSave={toggleArticle} />\r\n          ) : (\r\n            error && (\r\n              <span data-testid='error' className='Feed__error'>\r\n                {error}\r\n              </span>\r\n            )\r\n          )}\r\n        </div>\r\n        <div className='Feed__footer'>\r\n          <span>\r\n            Powered by{' '}\r\n            <a href='https://currentsapi.services/en' target='_blank' rel='noopener noreferrer'>\r\n              currentsapi\r\n            </a>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </motion.main>\r\n  )\r\n}\r\n\r\nconst mapState = (state: RootState): MapStateTypes => ({\r\n  loading: state.articles.loading,\r\n  articles: state.articles.articles,\r\n  error: state.articles.error,\r\n  isAuthenticated: state.profile.isAuth,\r\n  savedArticles: state.articles.saved,\r\n})\r\n\r\nconst mapDispatch: MapDispatchTypes = {\r\n  requestArticles,\r\n  toggleArticle,\r\n}\r\n\r\nexport default connect<MapStateTypes, MapDispatchTypes, {}, RootState>(mapState, mapDispatch)(Feed)\r\n","import React, { FC, useEffect, useState } from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { connect, ConnectedProps } from 'react-redux'\nimport { autoLogin } from './redux/actions/profileActions'\nimport { RootState } from './redux/reducers/rootReducer'\nimport { Thunk } from './redux/actions/ActionsTypes'\nimport ThemeToggle from './Components/UI/ThemeToggler/ThemeToggle'\nimport Sidebar from './Components/Sidebar/Sidebar'\nimport Profile from './Components/Containers/Profile/Profile'\nimport Saved from './Components/Containers/Saved/Saved'\nimport Feed from './Components/Containers/Feed/Feed'\nimport './App.scss'\n\ntype Theme = 'light' | 'dark'\n\nconst getInitialTheme = () => {\n  return localStorage.getItem('NEWSIUM/theme') as undefined | Theme\n}\n\nconst App: FC<AppProps> = ({ isAuthenticated, autoLogin }) => {\n  const [theme, setTheme] = useState<Theme>('light')\n\n  const onThemeChange = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light')\n  }\n\n  useEffect(() => {\n    const theme = getInitialTheme()\n    if (theme) setTheme(theme)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('NEWSIUM/theme', theme)\n  }, [theme])\n\n  useEffect(() => {\n    autoLogin()\n  }, [autoLogin])\n\n  const routes = [\n    <Route path='/profile' component={Profile} key='profile' />,\n    <Route path='/' exact component={Feed} key='feed' />,\n  ]\n\n  isAuthenticated && routes.push(<Route path='/saved' component={Saved} key='saved' />)\n\n  return (\n    <div className={`App ${theme}`}>\n      <Sidebar isAuthenticated={isAuthenticated}>\n        <ThemeToggle theme={theme} onChange={onThemeChange} />\n      </Sidebar>\n      <Switch>\n        {routes}\n        <Redirect to='/' />\n      </Switch>\n    </div>\n  )\n}\n\ntype MapState = { isAuthenticated: boolean }\nconst mapStateToProps = (state: RootState): MapState => ({ isAuthenticated: state.profile.isAuth })\n\ntype MapDispatch = { autoLogin: () => Thunk }\nconst mapDispatchToProps: MapDispatch = { autoLogin }\n\nconst connector = connect(mapStateToProps, mapDispatchToProps)\ntype AppProps = ConnectedProps<typeof connector>\n\nexport default connector(App)\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/reducers/rootReducer\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"Button_primary__1g_w5\",\"secondary\":\"Button_secondary__1ZtVI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_ellipsis\":\"Loader_lds_ellipsis__39DjF\",\"lds-ellipsis1\":\"Loader_lds-ellipsis1__2nQUq\",\"lds-ellipsis2\":\"Loader_lds-ellipsis2__5mHdb\",\"lds-ellipsis3\":\"Loader_lds-ellipsis3__3HpYi\"};"],"sourceRoot":""}